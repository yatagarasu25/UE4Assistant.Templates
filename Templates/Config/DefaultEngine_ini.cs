// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace UE4Assistant.Templates.Config
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\workspace\UE4AssistantCLI\UE4Assistant.Templates\Templates\Config\DefaultEngine_ini.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class DefaultEngine_ini : DefaultEngine_iniBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("[/Script/Engine.Engine]\r\nNearClipPlane=3.000000\r\n\r\n[URL]\r\n[/Script/Engine.EndUser" +
                    "Settings]\r\nbSendAnonymousUsageDataToEpic=False\r\n\r\n[/Script/WindowsTargetPlatform" +
                    ".WindowsTargetSettings]\r\n-TargetedRHIs=PCD3D_SM5\r\n-TargetedRHIs=PCD3D_SM4\r\n-Targ" +
                    "etedRHIs=GLSL_150\r\n+TargetedRHIs=PCD3D_SM5\r\n+TargetedRHIs=PCD3D_SM4\r\nMinimumOSVe" +
                    "rsion=MSOS_Vista\r\n\r\n[/Script/Engine.RendererSettings]\r\nr.MobileHDR=True\r\nr.Mobil" +
                    "eNumDynamicPointLights=4\r\nr.MobileDynamicPointLightsUseStaticBranch=True\r\nr.Mobi" +
                    "le.EnableStaticAndCSMShadowReceivers=True\r\nr.DiscardUnusedQuality=False\r\nr.Allow" +
                    "OcclusionQueries=True\r\nr.MinScreenRadiusForLights=0.030000\r\nr.MinScreenRadiusFor" +
                    "DepthPrepass=0.030000\r\nr.MinScreenRadiusForCSMDepth=0.010000\r\nr.PrecomputedVisib" +
                    "ilityWarning=False\r\nr.TextureStreaming=True\r\nCompat.UseDXT5NormalMaps=False\r\nr.C" +
                    "learCoatNormal=False\r\nr.ReflectionCaptureResolution=128\r\nr.ForwardShading=False\r" +
                    "\nr.AllowStaticLighting=False\r\nr.NormalMapsForStaticLighting=False\r\nr.GenerateMes" +
                    "hDistanceFields=False\r\nr.GenerateLandscapeGIData=True\r\nr.TessellationAdaptivePix" +
                    "elsPerTriangle=48.000000\r\nr.SeparateTranslucency=True\r\nr.TranslucentSortPolicy=0" +
                    "\r\nTranslucentSortAxis=(X=0.000000,Y=-1.000000,Z=0.000000)\r\nr.CustomDepth=3\r\nr.De" +
                    "faultFeature.Bloom=True\r\nr.DefaultFeature.AmbientOcclusion=True\r\nr.DefaultFeatur" +
                    "e.AmbientOcclusionStaticFraction=True\r\nr.DefaultFeature.AutoExposure=True\r\nr.Def" +
                    "aultFeature.AutoExposure.Method=0\r\nr.DefaultFeature.MotionBlur=True\r\nr.DefaultFe" +
                    "ature.LensFlare=False\r\nr.DefaultFeature.AntiAliasing=2\r\nr.StencilForLODDither=Fa" +
                    "lse\r\nr.EarlyZPass=3\r\nr.EarlyZPassMovable=False\r\nr.DBuffer=False\r\nr.ClearSceneMet" +
                    "hod=1\r\nr.BasePassOutputsVelocity=False\r\nr.SelectiveBasePassOutputs=False\r\nr.Allo" +
                    "wGlobalClipPlane=False\r\nr.GBufferFormat=1\r\nr.MorphTarget.Mode=False\r\nvr.Instance" +
                    "dStereo=False\r\nvr.MultiView=False\r\nr.WireframeCullThreshold=5.000000\r\nr.SupportS" +
                    "tationarySkylight=True\r\nr.SupportLowQualityLightmaps=True\r\nr.SupportPointLightWh" +
                    "oleSceneShadows=True\r\nr.SupportAtmosphericFog=True\r\nr.LightPropagationVolume=1\r\n" +
                    "\r\nUIScaleRule=ShortestSide\r\nUIScaleCurve=(EditorCurveData=(PreInfinityExtrap=RCC" +
                    "E_Constant,PostInfinityExtrap=RCCE_Constant,Keys=,DefaultValue=34028234663852885" +
                    "9811704183484516925440.000000),ExternalCurve=None)\r\n\r\n[/Script/EngineSettings.Ga" +
                    "meMapsSettings]\r\nEditorStartupMap=\r\nLocalMapOptions=\r\nTransitionMap=None\r\nbUseSp" +
                    "litscreen=True\r\nTwoPlayerSplitscreenLayout=Horizontal\r\nThreePlayerSplitscreenLay" +
                    "out=FavorTop\r\nbOffsetPlayerGamepadIds=False\r\nGameInstanceClass=/Game/");
            
            #line 86 "D:\workspace\UE4AssistantCLI\UE4Assistant.Templates\Templates\Config\DefaultEngine_ini.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.modulename));
            
            #line default
            #line hidden
            this.Write("Content/Bluprints/");
            
            #line 86 "D:\workspace\UE4AssistantCLI\UE4Assistant.Templates\Templates\Config\DefaultEngine_ini.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.modulename));
            
            #line default
            #line hidden
            this.Write("GameInstanceBlueprint.");
            
            #line 86 "D:\workspace\UE4AssistantCLI\UE4Assistant.Templates\Templates\Config\DefaultEngine_ini.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.modulename));
            
            #line default
            #line hidden
            this.Write("GameInstanceBlueprint_C\r\nGameDefaultMap=/Game/");
            
            #line 87 "D:\workspace\UE4AssistantCLI\UE4Assistant.Templates\Templates\Config\DefaultEngine_ini.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.modulename));
            
            #line default
            #line hidden
            this.Write("Content/Levels/InitGame.InitGame\r\nServerDefaultMap=/Game/");
            
            #line 88 "D:\workspace\UE4AssistantCLI\UE4Assistant.Templates\Templates\Config\DefaultEngine_ini.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.modulename));
            
            #line default
            #line hidden
            this.Write("Content/Levels/InitGame.InitGame\r\nGlobalDefaultGameMode=/Script/");
            
            #line 89 "D:\workspace\UE4AssistantCLI\UE4Assistant.Templates\Templates\Config\DefaultEngine_ini.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.modulename));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 89 "D:\workspace\UE4AssistantCLI\UE4Assistant.Templates\Templates\Config\DefaultEngine_ini.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.modulename));
            
            #line default
            #line hidden
            this.Write("GameMode\r\nGlobalDefaultServerGameMode=/Script/");
            
            #line 90 "D:\workspace\UE4AssistantCLI\UE4Assistant.Templates\Templates\Config\DefaultEngine_ini.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.modulename));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 90 "D:\workspace\UE4AssistantCLI\UE4Assistant.Templates\Templates\Config\DefaultEngine_ini.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.modulename));
            
            #line default
            #line hidden
            this.Write("GameMode\r\n\r\n[/Script/HardwareTargeting.HardwareTargetingSettings]\r\nTargetedHardwa" +
                    "reClass=Desktop\r\nAppliedTargetedHardwareClass=Desktop\r\nDefaultGraphicsPerformanc" +
                    "e=Maximum\r\nAppliedDefaultGraphicsPerformance=Maximum\r\n\r\n[/Script/Engine.UserInte" +
                    "rfaceSettings]\r\nRenderFocusRule=NavigationOnly\r\nDefaultCursor=None\r\nTextEditBeam" +
                    "Cursor=None\r\nCrosshairsCursor=None\r\nHandCursor=None\r\nGrabHandCursor=None\r\nGrabHa" +
                    "ndClosedCursor=None\r\nSlashedCircleCursor=None\r\nApplicationScale=1.000000\r\nUIScal" +
                    "eRule=Vertical\r\nCustomScalingRuleClass=None\r\nUIScaleCurve=(EditorCurveData=(PreI" +
                    "nfinityExtrap=RCCE_Constant,PostInfinityExtrap=RCCE_Constant,Keys=((Time=720.000" +
                    "061,Value=0.666667),(Time=1080.000000,Value=1.000000)),DefaultValue=340282346638" +
                    "528859811704183484516925440.000000),ExternalCurve=None)\r\n\r\n[/Script/Engine.Physi" +
                    "csSettings]\r\nDefaultGravityZ=-980.000000\r\nDefaultTerminalVelocity=4000.000000\r\nD" +
                    "efaultFluidFriction=0.300000\r\nSimulateScratchMemorySize=262144\r\nRagdollAggregate" +
                    "Threshold=4\r\nTriangleMeshTriangleMinAreaThreshold=5.000000\r\nbEnableAsyncScene=Fa" +
                    "lse\r\nbEnableShapeSharing=False\r\nbEnablePCM=False\r\nbWarnMissingLocks=True\r\nbEnabl" +
                    "e2DPhysics=False\r\nLockedAxis=Invalid\r\nDefaultDegreesOfFreedom=Full3D\r\nBounceThre" +
                    "sholdVelocity=200.000000\r\nFrictionCombineMode=Average\r\nRestitutionCombineMode=Av" +
                    "erage\r\nMaxAngularVelocity=3600.000000\r\nMaxDepenetrationVelocity=0.000000\r\nContac" +
                    "tOffsetMultiplier=0.010000\r\nMinContactOffset=0.000100\r\nMaxContactOffset=1.000000" +
                    "\r\nbSimulateSkeletalMeshOnDedicatedServer=True\r\nDefaultShapeComplexity=CTF_UseSim" +
                    "pleAndComplex\r\nbDefaultHasComplexCollision=True\r\nbSuppressFaceRemapTable=False\r\n" +
                    "bSupportUVFromHitResults=False\r\nbDisableActiveActors=False\r\nbDisableCCD=False\r\nM" +
                    "axPhysicsDeltaTime=0.033333\r\nbSubstepping=True\r\nbSubsteppingAsync=False\r\nMaxSubs" +
                    "tepDeltaTime=0.016667\r\nMaxSubsteps=6\r\nSyncSceneSmoothingFactor=0.000000\r\nAsyncSc" +
                    "eneSmoothingFactor=0.990000\r\nInitialAverageFrameRate=0.016667\r\n+PhysicalSurfaces" +
                    "=(Type=SurfaceType1,Name=\"Drone\")\r\n+PhysicalSurfaces=(Type=SurfaceType2,Name=\"Bu" +
                    "bble\")\r\n+PhysicalSurfaces=(Type=SurfaceType3,Name=\"DroneSafetyBubble\")\r\n\r\n[/Scri" +
                    "pt/Engine.CollisionProfile]\r\n-Profiles=(Name=\"NoCollision\",CollisionEnabled=NoCo" +
                    "llision,ObjectTypeName=\"WorldStatic\",CustomResponses=((Channel=\"Visibility\",Resp" +
                    "onse=ECR_Ignore),(Channel=\"Camera\",Response=ECR_Ignore)),HelpMessage=\"No collisi" +
                    "on\",bCanModify=False)\r\n-Profiles=(Name=\"BlockAll\",CollisionEnabled=QueryAndPhysi" +
                    "cs,ObjectTypeName=\"WorldStatic\",CustomResponses=,HelpMessage=\"WorldStatic object" +
                    " that blocks all actors by default. All new custom channels will use its own def" +
                    "ault response. \",bCanModify=False)\r\n-Profiles=(Name=\"OverlapAll\",CollisionEnable" +
                    "d=QueryOnly,ObjectTypeName=\"WorldStatic\",CustomResponses=((Channel=\"WorldStatic\"" +
                    ",Response=ECR_Overlap),(Channel=\"Pawn\",Response=ECR_Overlap),(Channel=\"Visibilit" +
                    "y\",Response=ECR_Overlap),(Channel=\"WorldDynamic\",Response=ECR_Overlap),(Channel=" +
                    "\"Camera\",Response=ECR_Overlap),(Channel=\"PhysicsBody\",Response=ECR_Overlap),(Cha" +
                    "nnel=\"Vehicle\",Response=ECR_Overlap),(Channel=\"Destructible\",Response=ECR_Overla" +
                    "p)),HelpMessage=\"WorldStatic object that overlaps all actors by default. All new" +
                    " custom channels will use its own default response. \",bCanModify=False)\r\n-Profil" +
                    "es=(Name=\"BlockAllDynamic\",CollisionEnabled=QueryAndPhysics,ObjectTypeName=\"Worl" +
                    "dDynamic\",CustomResponses=,HelpMessage=\"WorldDynamic object that blocks all acto" +
                    "rs by default. All new custom channels will use its own default response. \",bCan" +
                    "Modify=False)\r\n-Profiles=(Name=\"OverlapAllDynamic\",CollisionEnabled=QueryOnly,Ob" +
                    "jectTypeName=\"WorldDynamic\",CustomResponses=((Channel=\"WorldStatic\",Response=ECR" +
                    "_Overlap),(Channel=\"Pawn\",Response=ECR_Overlap),(Channel=\"Visibility\",Response=E" +
                    "CR_Overlap),(Channel=\"WorldDynamic\",Response=ECR_Overlap),(Channel=\"Camera\",Resp" +
                    "onse=ECR_Overlap),(Channel=\"PhysicsBody\",Response=ECR_Overlap),(Channel=\"Vehicle" +
                    "\",Response=ECR_Overlap),(Channel=\"Destructible\",Response=ECR_Overlap)),HelpMessa" +
                    "ge=\"WorldDynamic object that overlaps all actors by default. All new custom chan" +
                    "nels will use its own default response. \",bCanModify=False)\r\n-Profiles=(Name=\"Ig" +
                    "noreOnlyPawn\",CollisionEnabled=QueryOnly,ObjectTypeName=\"WorldDynamic\",CustomRes" +
                    "ponses=((Channel=\"Pawn\",Response=ECR_Ignore),(Channel=\"Vehicle\",Response=ECR_Ign" +
                    "ore)),HelpMessage=\"WorldDynamic object that ignores Pawn and Vehicle. All other " +
                    "channels will be set to default.\",bCanModify=False)\r\n-Profiles=(Name=\"OverlapOnl" +
                    "yPawn\",CollisionEnabled=QueryOnly,ObjectTypeName=\"WorldDynamic\",CustomResponses=" +
                    "((Channel=\"Pawn\",Response=ECR_Overlap),(Channel=\"Vehicle\",Response=ECR_Overlap)," +
                    "(Channel=\"Camera\",Response=ECR_Ignore)),HelpMessage=\"WorldDynamic object that ov" +
                    "erlaps Pawn, Camera, and Vehicle. All other channels will be set to default. \",b" +
                    "CanModify=False)\r\n-Profiles=(Name=\"Pawn\",CollisionEnabled=QueryAndPhysics,Object" +
                    "TypeName=\"Pawn\",CustomResponses=((Channel=\"Visibility\",Response=ECR_Ignore)),Hel" +
                    "pMessage=\"Pawn object. Can be used for capsule of any playerable character or AI" +
                    ". \",bCanModify=False)\r\n-Profiles=(Name=\"Spectator\",CollisionEnabled=QueryOnly,Ob" +
                    "jectTypeName=\"Pawn\",CustomResponses=((Channel=\"WorldStatic\",Response=ECR_Block)," +
                    "(Channel=\"Pawn\",Response=ECR_Ignore),(Channel=\"Visibility\",Response=ECR_Ignore)," +
                    "(Channel=\"WorldDynamic\",Response=ECR_Ignore),(Channel=\"Camera\",Response=ECR_Igno" +
                    "re),(Channel=\"PhysicsBody\",Response=ECR_Ignore),(Channel=\"Vehicle\",Response=ECR_" +
                    "Ignore),(Channel=\"Destructible\",Response=ECR_Ignore)),HelpMessage=\"Pawn object t" +
                    "hat ignores all other actors except WorldStatic.\",bCanModify=False)\r\n-Profiles=(" +
                    "Name=\"CharacterMesh\",CollisionEnabled=QueryOnly,ObjectTypeName=\"Pawn\",CustomResp" +
                    "onses=((Channel=\"Pawn\",Response=ECR_Ignore),(Channel=\"Vehicle\",Response=ECR_Igno" +
                    "re),(Channel=\"Visibility\",Response=ECR_Ignore)),HelpMessage=\"Pawn object that is" +
                    " used for Character Mesh. All other channels will be set to default.\",bCanModify" +
                    "=False)\r\n-Profiles=(Name=\"PhysicsActor\",CollisionEnabled=QueryAndPhysics,ObjectT" +
                    "ypeName=\"PhysicsBody\",CustomResponses=,HelpMessage=\"Simulating actors\",bCanModif" +
                    "y=False)\r\n-Profiles=(Name=\"Destructible\",CollisionEnabled=QueryAndPhysics,Object" +
                    "TypeName=\"Destructible\",CustomResponses=,HelpMessage=\"Destructible actors\",bCanM" +
                    "odify=False)\r\n-Profiles=(Name=\"InvisibleWall\",CollisionEnabled=QueryAndPhysics,O" +
                    "bjectTypeName=\"WorldStatic\",CustomResponses=((Channel=\"Visibility\",Response=ECR_" +
                    "Ignore)),HelpMessage=\"WorldStatic object that is invisible.\",bCanModify=False)\r\n" +
                    "-Profiles=(Name=\"InvisibleWallDynamic\",CollisionEnabled=QueryAndPhysics,ObjectTy" +
                    "peName=\"WorldDynamic\",CustomResponses=((Channel=\"Visibility\",Response=ECR_Ignore" +
                    ")),HelpMessage=\"WorldDynamic object that is invisible.\",bCanModify=False)\r\n-Prof" +
                    "iles=(Name=\"Trigger\",CollisionEnabled=QueryOnly,ObjectTypeName=\"WorldDynamic\",Cu" +
                    "stomResponses=((Channel=\"WorldStatic\",Response=ECR_Overlap),(Channel=\"Pawn\",Resp" +
                    "onse=ECR_Overlap),(Channel=\"Visibility\",Response=ECR_Ignore),(Channel=\"WorldDyna" +
                    "mic\",Response=ECR_Overlap),(Channel=\"Camera\",Response=ECR_Overlap),(Channel=\"Phy" +
                    "sicsBody\",Response=ECR_Overlap),(Channel=\"Vehicle\",Response=ECR_Overlap),(Channe" +
                    "l=\"Destructible\",Response=ECR_Overlap)),HelpMessage=\"WorldDynamic object that is" +
                    " used for trigger. All other channels will be set to default.\",bCanModify=False)" +
                    "\r\n-Profiles=(Name=\"Ragdoll\",CollisionEnabled=QueryAndPhysics,ObjectTypeName=\"Phy" +
                    "sicsBody\",CustomResponses=((Channel=\"Pawn\",Response=ECR_Ignore)),HelpMessage=\"Si" +
                    "mulating Skeletal Mesh Component. All other channels will be set to default.\",bC" +
                    "anModify=False)\r\n-Profiles=(Name=\"Vehicle\",CollisionEnabled=QueryAndPhysics,Obje" +
                    "ctTypeName=\"Vehicle\",CustomResponses=,HelpMessage=\"Vehicle object that blocks Ve" +
                    "hicle, WorldStatic, and WorldDynamic. All other channels will be set to default." +
                    "\",bCanModify=False)\r\n-Profiles=(Name=\"UI\",CollisionEnabled=QueryOnly,ObjectTypeN" +
                    "ame=\"WorldDynamic\",CustomResponses=((Channel=\"WorldStatic\",Response=ECR_Overlap)" +
                    ",(Channel=\"Pawn\",Response=ECR_Overlap),(Channel=\"Visibility\",Response=ECR_Block)" +
                    ",(Channel=\"WorldDynamic\",Response=ECR_Overlap),(Channel=\"Camera\",Response=ECR_Ov" +
                    "erlap),(Channel=\"PhysicsBody\",Response=ECR_Overlap),(Channel=\"Vehicle\",Response=" +
                    "ECR_Overlap),(Channel=\"Destructible\",Response=ECR_Overlap)),HelpMessage=\"WorldSt" +
                    "atic object that overlaps all actors by default. All new custom channels will us" +
                    "e its own default response. \",bCanModify=False)\r\n+Profiles=(Name=\"NoCollision\",C" +
                    "ollisionEnabled=NoCollision,ObjectTypeName=\"WorldStatic\",CustomResponses=((Chann" +
                    "el=\"Visibility\",Response=ECR_Ignore),(Channel=\"Camera\",Response=ECR_Ignore)),Hel" +
                    "pMessage=\"No collision\",bCanModify=False)\r\n+Profiles=(Name=\"RotorOverlap\",Collis" +
                    "ionEnabled=QueryOnly,ObjectTypeName=\"WorldDynamic\",CustomResponses=((Channel=\"Vi" +
                    "sibility\",Response=ECR_Ignore),(Channel=\"Camera\",Response=ECR_Ignore),(Channel=\"" +
                    "WorldStatic\",Response=ECR_Overlap),(Channel=\"Pawn\",Response=ECR_Overlap),(Channe" +
                    "l=\"Visibility\",Response=ECR_Overlap),(Channel=\"WorldDynamic\",Response=ECR_Overla" +
                    "p),(Channel=\"Camera\",Response=ECR_Overlap),(Channel=\"PhysicsBody\",Response=ECR_O" +
                    "verlap),(Channel=\"Vehicle\",Response=ECR_Overlap),(Channel=\"Destructible\",Respons" +
                    "e=ECR_Overlap)),HelpMessage=\"Rotor blade overlap events. For rotor blades or bre" +
                    "akable objects.\",bCanModify=False)\r\n+Profiles=(Name=\"BlockAll\",CollisionEnabled=" +
                    "QueryAndPhysics,ObjectTypeName=\"WorldStatic\",CustomResponses=,HelpMessage=\"World" +
                    "Static object that blocks all actors by default. All new custom channels will us" +
                    "e its own default response. \",bCanModify=False)\r\n+Profiles=(Name=\"OverlapAll\",Co" +
                    "llisionEnabled=QueryOnly,ObjectTypeName=\"WorldStatic\",CustomResponses=((Channel=" +
                    "\"WorldStatic\",Response=ECR_Overlap),(Channel=\"Pawn\",Response=ECR_Overlap),(Chann" +
                    "el=\"Visibility\",Response=ECR_Overlap),(Channel=\"WorldDynamic\",Response=ECR_Overl" +
                    "ap),(Channel=\"Camera\",Response=ECR_Overlap),(Channel=\"PhysicsBody\",Response=ECR_" +
                    "Overlap),(Channel=\"Vehicle\",Response=ECR_Overlap),(Channel=\"Destructible\",Respon" +
                    "se=ECR_Overlap)),HelpMessage=\"WorldStatic object that overlaps all actors by def" +
                    "ault. All new custom channels will use its own default response. \",bCanModify=Fa" +
                    "lse)\r\n+Profiles=(Name=\"BlockAllDynamic\",CollisionEnabled=QueryAndPhysics,ObjectT" +
                    "ypeName=\"WorldDynamic\",CustomResponses=,HelpMessage=\"WorldDynamic object that bl" +
                    "ocks all actors by default. All new custom channels will use its own default res" +
                    "ponse. \",bCanModify=False)\r\n+Profiles=(Name=\"OverlapAllDynamic\",CollisionEnabled" +
                    "=QueryOnly,ObjectTypeName=\"WorldDynamic\",CustomResponses=((Channel=\"WorldStatic\"" +
                    ",Response=ECR_Overlap),(Channel=\"Pawn\",Response=ECR_Overlap),(Channel=\"Visibilit" +
                    "y\",Response=ECR_Overlap),(Channel=\"WorldDynamic\",Response=ECR_Overlap),(Channel=" +
                    "\"Camera\",Response=ECR_Overlap),(Channel=\"PhysicsBody\",Response=ECR_Overlap),(Cha" +
                    "nnel=\"Vehicle\",Response=ECR_Overlap),(Channel=\"Destructible\",Response=ECR_Overla" +
                    "p)),HelpMessage=\"WorldDynamic object that overlaps all actors by default. All ne" +
                    "w custom channels will use its own default response. \",bCanModify=False)\r\n+Profi" +
                    "les=(Name=\"IgnoreOnlyPawn\",CollisionEnabled=QueryOnly,ObjectTypeName=\"WorldDynam" +
                    "ic\",CustomResponses=((Channel=\"Pawn\",Response=ECR_Ignore),(Channel=\"Vehicle\",Res" +
                    "ponse=ECR_Ignore)),HelpMessage=\"WorldDynamic object that ignores Pawn and Vehicl" +
                    "e. All other channels will be set to default.\",bCanModify=False)\r\n+Profiles=(Nam" +
                    "e=\"OverlapOnlyPawn\",CollisionEnabled=QueryOnly,ObjectTypeName=\"WorldDynamic\",Cus" +
                    "tomResponses=((Channel=\"Pawn\",Response=ECR_Overlap),(Channel=\"Vehicle\",Response=" +
                    "ECR_Overlap),(Channel=\"Camera\",Response=ECR_Ignore)),HelpMessage=\"WorldDynamic o" +
                    "bject that overlaps Pawn, Camera, and Vehicle. All other channels will be set to" +
                    " default. \",bCanModify=False)\r\n+Profiles=(Name=\"TraceCursor\",CollisionEnabled=Qu" +
                    "eryOnly,ObjectTypeName=\"WorldDynamic\",CustomResponses=((Channel=\"Map\",Response=E" +
                    "CR_Ignore),(Channel=\"Cursor\"),(Channel=\"WorldStatic\",Response=ECR_Ignore),(Chann" +
                    "el=\"Pawn\",Response=ECR_Ignore),(Channel=\"Visibility\",Response=ECR_Ignore),(Chann" +
                    "el=\"WorldDynamic\",Response=ECR_Ignore),(Channel=\"Camera\",Response=ECR_Ignore),(C" +
                    "hannel=\"PhysicsBody\",Response=ECR_Ignore),(Channel=\"Vehicle\",Response=ECR_Ignore" +
                    "),(Channel=\"Destructible\",Response=ECR_Ignore)),HelpMessage=\"Cursor object which" +
                    " overlaps only Cursor. All other channels will be set to default. \",bCanModify=F" +
                    "alse)\r\n+Profiles=(Name=\"Pawn\",CollisionEnabled=QueryAndPhysics,ObjectTypeName=\"P" +
                    "awn\",CustomResponses=((Channel=\"Visibility\",Response=ECR_Ignore)),HelpMessage=\"P" +
                    "awn object. Can be used for capsule of any playerable character or AI. \",bCanMod" +
                    "ify=False)\r\n+Profiles=(Name=\"Spectator\",CollisionEnabled=QueryOnly,ObjectTypeNam" +
                    "e=\"Pawn\",CustomResponses=((Channel=\"WorldStatic\"),(Channel=\"Pawn\",Response=ECR_I" +
                    "gnore),(Channel=\"Visibility\",Response=ECR_Ignore),(Channel=\"WorldDynamic\",Respon" +
                    "se=ECR_Ignore),(Channel=\"Camera\",Response=ECR_Ignore),(Channel=\"PhysicsBody\",Res" +
                    "ponse=ECR_Ignore),(Channel=\"Vehicle\",Response=ECR_Ignore),(Channel=\"Destructible" +
                    "\",Response=ECR_Ignore)),HelpMessage=\"Pawn object that ignores all other actors e" +
                    "xcept WorldStatic.\",bCanModify=False)\r\n+Profiles=(Name=\"CharacterMesh\",Collision" +
                    "Enabled=QueryOnly,ObjectTypeName=\"Pawn\",CustomResponses=((Channel=\"Pawn\",Respons" +
                    "e=ECR_Ignore),(Channel=\"Vehicle\",Response=ECR_Ignore),(Channel=\"Visibility\",Resp" +
                    "onse=ECR_Ignore)),HelpMessage=\"Pawn object that is used for Character Mesh. All " +
                    "other channels will be set to default.\",bCanModify=False)\r\n+Profiles=(Name=\"Phys" +
                    "icsActor\",CollisionEnabled=QueryAndPhysics,ObjectTypeName=\"PhysicsBody\",CustomRe" +
                    "sponses=,HelpMessage=\"Simulating actors\",bCanModify=False)\r\n+Profiles=(Name=\"Des" +
                    "tructible\",CollisionEnabled=QueryAndPhysics,ObjectTypeName=\"Destructible\",Custom" +
                    "Responses=,HelpMessage=\"Destructible actors\",bCanModify=False)\r\n+Profiles=(Name=" +
                    "\"InvisibleWall\",CollisionEnabled=QueryAndPhysics,ObjectTypeName=\"WorldStatic\",Cu" +
                    "stomResponses=((Channel=\"Visibility\",Response=ECR_Ignore)),HelpMessage=\"WorldSta" +
                    "tic object that is invisible.\",bCanModify=False)\r\n+Profiles=(Name=\"InvisibleWall" +
                    "Dynamic\",CollisionEnabled=QueryAndPhysics,ObjectTypeName=\"WorldDynamic\",CustomRe" +
                    "sponses=((Channel=\"Visibility\",Response=ECR_Ignore)),HelpMessage=\"WorldDynamic o" +
                    "bject that is invisible.\",bCanModify=False)\r\n+Profiles=(Name=\"Trigger\",Collision" +
                    "Enabled=QueryOnly,ObjectTypeName=\"WorldDynamic\",CustomResponses=((Channel=\"World" +
                    "Static\",Response=ECR_Overlap),(Channel=\"Pawn\",Response=ECR_Overlap),(Channel=\"Vi" +
                    "sibility\",Response=ECR_Ignore),(Channel=\"WorldDynamic\",Response=ECR_Overlap),(Ch" +
                    "annel=\"Camera\",Response=ECR_Overlap),(Channel=\"PhysicsBody\",Response=ECR_Overlap" +
                    "),(Channel=\"Vehicle\",Response=ECR_Overlap),(Channel=\"Destructible\",Response=ECR_" +
                    "Overlap)),HelpMessage=\"WorldDynamic object that is used for trigger. All other c" +
                    "hannels will be set to default.\",bCanModify=False)\r\n+Profiles=(Name=\"Ragdoll\",Co" +
                    "llisionEnabled=QueryAndPhysics,ObjectTypeName=\"PhysicsBody\",CustomResponses=((Ch" +
                    "annel=\"Pawn\",Response=ECR_Ignore)),HelpMessage=\"Simulating Skeletal Mesh Compone" +
                    "nt. All other channels will be set to default.\",bCanModify=False)\r\n+Profiles=(Na" +
                    "me=\"Vehicle\",CollisionEnabled=QueryAndPhysics,ObjectTypeName=\"Vehicle\",CustomRes" +
                    "ponses=,HelpMessage=\"Vehicle object that blocks Vehicle, WorldStatic, and WorldD" +
                    "ynamic. All other channels will be set to default.\",bCanModify=False)\r\n+Profiles" +
                    "=(Name=\"UI\",CollisionEnabled=QueryOnly,ObjectTypeName=\"WorldDynamic\",CustomRespo" +
                    "nses=((Channel=\"WorldStatic\",Response=ECR_Overlap),(Channel=\"Pawn\",Response=ECR_" +
                    "Overlap),(Channel=\"Visibility\"),(Channel=\"WorldDynamic\",Response=ECR_Overlap),(C" +
                    "hannel=\"Camera\",Response=ECR_Overlap),(Channel=\"PhysicsBody\",Response=ECR_Overla" +
                    "p),(Channel=\"Vehicle\",Response=ECR_Overlap),(Channel=\"Destructible\",Response=ECR" +
                    "_Overlap)),HelpMessage=\"WorldStatic object that overlaps all actors by default. " +
                    "All new custom channels will use its own default response. \",bCanModify=False)\r\n" +
                    "+Profiles=(Name=\"BlockAllMap\",CollisionEnabled=QueryAndPhysics,ObjectTypeName=\"W" +
                    "orldStatic\",CustomResponses=,HelpMessage=\"Map surface object that blocks all act" +
                    "ors by default. All new custom channels will use its own default response. \",bCa" +
                    "nModify=True)\r\n+Profiles=(Name=\"Drone\",CollisionEnabled=QueryAndPhysics,ObjectTy" +
                    "peName=\"Drone\",CustomResponses=((Channel=\"Map\",Response=ECR_Ignore)),HelpMessage" +
                    "=\"Drone Collision model\",bCanModify=True)\r\n+Profiles=(Name=\"OverlapBubble\",Colli" +
                    "sionEnabled=QueryOnly,ObjectTypeName=\"Bubble\",CustomResponses=((Channel=\"WorldSt" +
                    "atic\",Response=ECR_Ignore),(Channel=\"WorldDynamic\",Response=ECR_Ignore),(Channel" +
                    "=\"Pawn\",Response=ECR_Ignore),(Channel=\"Visibility\",Response=ECR_Ignore),(Channel" +
                    "=\"Camera\",Response=ECR_Ignore),(Channel=\"PhysicsBody\",Response=ECR_Ignore),(Chan" +
                    "nel=\"Vehicle\",Response=ECR_Ignore),(Channel=\"Destructible\",Response=ECR_Ignore)," +
                    "(Channel=\"Map\",Response=ECR_Ignore),(Channel=\"Bubble\",Response=ECR_Overlap),(Cha" +
                    "nnel=\"Drone\",Response=ECR_Overlap)),HelpMessage=\"Needs description\",bCanModify=T" +
                    "rue)\r\n+Profiles=(Name=\"DroneSafetyBubble\",CollisionEnabled=QueryOnly,ObjectTypeN" +
                    "ame=\"Bubble\",CustomResponses=((Channel=\"WorldStatic\",Response=ECR_Overlap),(Chan" +
                    "nel=\"WorldDynamic\",Response=ECR_Overlap),(Channel=\"Pawn\",Response=ECR_Overlap),(" +
                    "Channel=\"Visibility\",Response=ECR_Ignore),(Channel=\"Camera\",Response=ECR_Ignore)" +
                    ",(Channel=\"PhysicsBody\",Response=ECR_Overlap),(Channel=\"Vehicle\",Response=ECR_Ov" +
                    "erlap),(Channel=\"Destructible\",Response=ECR_Overlap),(Channel=\"Map\",Response=ECR" +
                    "_Ignore),(Channel=\"Drone\",Response=ECR_Overlap)),HelpMessage=\"Checks if any obje" +
                    "ct is overlapping drone safety region.\",bCanModify=True)\r\n+DefaultChannelRespons" +
                    "es=(Channel=ECC_GameTraceChannel1,Name=\"Map\",DefaultResponse=ECR_Block,bTraceTyp" +
                    "e=True,bStaticObject=False)\r\n+DefaultChannelResponses=(Channel=ECC_GameTraceChan" +
                    "nel2,Name=\"Cursor\",DefaultResponse=ECR_Ignore,bTraceType=True,bStaticObject=Fals" +
                    "e)\r\n+DefaultChannelResponses=(Channel=ECC_GameTraceChannel3,Name=\"Bubble\",Defaul" +
                    "tResponse=ECR_Ignore,bTraceType=False,bStaticObject=False)\r\n+DefaultChannelRespo" +
                    "nses=(Channel=ECC_GameTraceChannel4,Name=\"Drone\",DefaultResponse=ECR_Block,bTrac" +
                    "eType=False,bStaticObject=False)\r\n+EditProfiles=(Name=\"RotorOverlap\",CustomRespo" +
                    "nses=((Channel=\"Visibility\",Response=ECR_Ignore),(Channel=\"Camera\",Response=ECR_" +
                    "Ignore),(Channel=\"Drone\",Response=ECR_Overlap),(Channel=\"Map\",Response=ECR_Ignor" +
                    "e)))\r\n+EditProfiles=(Name=\"OverlapAll\",CustomResponses=((Channel=\"Drone\",Respons" +
                    "e=ECR_Overlap)))\r\n-ProfileRedirects=(OldName=\"BlockingVolume\",NewName=\"Invisible" +
                    "Wall\")\r\n-ProfileRedirects=(OldName=\"InterpActor\",NewName=\"IgnoreOnlyPawn\")\r\n-Pro" +
                    "fileRedirects=(OldName=\"StaticMeshComponent\",NewName=\"BlockAllDynamic\")\r\n-Profil" +
                    "eRedirects=(OldName=\"SkeletalMeshActor\",NewName=\"PhysicsActor\")\r\n-ProfileRedirec" +
                    "ts=(OldName=\"InvisibleActor\",NewName=\"InvisibleWallDynamic\")\r\n+ProfileRedirects=" +
                    "(OldName=\"BlockingVolume\",NewName=\"InvisibleWall\")\r\n+ProfileRedirects=(OldName=\"" +
                    "InterpActor\",NewName=\"IgnoreOnlyPawn\")\r\n+ProfileRedirects=(OldName=\"StaticMeshCo" +
                    "mponent\",NewName=\"BlockAllDynamic\")\r\n+ProfileRedirects=(OldName=\"SkeletalMeshAct" +
                    "or\",NewName=\"PhysicsActor\")\r\n+ProfileRedirects=(OldName=\"InvisibleActor\",NewName" +
                    "=\"InvisibleWallDynamic\")\r\n-CollisionChannelRedirects=(OldName=\"Static\",NewName=\"" +
                    "WorldStatic\")\r\n-CollisionChannelRedirects=(OldName=\"Dynamic\",NewName=\"WorldDynam" +
                    "ic\")\r\n-CollisionChannelRedirects=(OldName=\"VehicleMovement\",NewName=\"Vehicle\")\r\n" +
                    "-CollisionChannelRedirects=(OldName=\"PawnMovement\",NewName=\"Pawn\")\r\n+CollisionCh" +
                    "annelRedirects=(OldName=\"Static\",NewName=\"WorldStatic\")\r\n+CollisionChannelRedire" +
                    "cts=(OldName=\"Dynamic\",NewName=\"WorldDynamic\")\r\n+CollisionChannelRedirects=(OldN" +
                    "ame=\"VehicleMovement\",NewName=\"Vehicle\")\r\n+CollisionChannelRedirects=(OldName=\"P" +
                    "awnMovement\",NewName=\"Pawn\")\r\n\r\n\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 1 "D:\workspace\UE4AssistantCLI\UE4Assistant.Templates\Templates\Config\DefaultEngine_ini.tt"

private string _modulenameField;

/// <summary>
/// Access the modulename parameter of the template.
/// </summary>
private string modulename
{
    get
    {
        return this._modulenameField;
    }
}


/// <summary>
/// Initialize the template
/// </summary>
public virtual void Initialize()
{
    if ((this.Errors.HasErrors == false))
    {
bool modulenameValueAcquired = false;
if (this.Session.ContainsKey("modulename"))
{
    this._modulenameField = ((string)(this.Session["modulename"]));
    modulenameValueAcquired = true;
}
if ((modulenameValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("modulename");
    if ((data != null))
    {
        this._modulenameField = ((string)(data));
    }
}


    }
}


        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public class DefaultEngine_iniBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
