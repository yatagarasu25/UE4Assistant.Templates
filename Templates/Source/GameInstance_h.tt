<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#@ parameter name="modulename" type="System.String" #>
#pragma once

#include "Engine/GameInstance.h"
#include "<#= this.modulename #>GameInstance.generated.h"



UCLASS(Config = GameInstance)
class <#= this.modulename.ToUpper() #>_API U<#= this.modulename #>GameInstance : public UGameInstance
{
	GENERATED_BODY()


public:
	static U<#= this.modulename #>GameInstance *GetInstance(const UObject* WorldContextObject);


public:
	UPROPERTY(Category = "Release", EditAnywhere, BlueprintReadOnly, config)
	FString ShopName;

	UPROPERTY(Category = "Game Session", VisibleInstanceOnly, BlueprintReadWrite, transient)
	bool bSkipLogo;

	UPROPERTY(Category = "Game Session", VisibleInstanceOnly, BlueprintReadWrite, transient)
	bool bIsLevelLoaded;

	UPROPERTY(Category = "Game Session", VisibleInstanceOnly, BlueprintReadWrite, transient)
	bool bUseHMD;


	UPROPERTY(Category = "Debug", EditAnywhere, BlueprintReadOnly)
	bool bDebugEnabled;

	UPROPERTY(Category = "Debug", EditAnywhere, BlueprintReadOnly)
	TSubclassOf<class UWidget> DebugHUDClass;

	UPROPERTY(Category = "Debug", EditAnywhere, BlueprintReadOnly)
	TSubclassOf<class AActor> DroneDebugDrawClass;


public:
	U<#= this.modulename #>GameInstance();


protected:
	virtual void Init() override;
	virtual void Shutdown() override;
	virtual void Tick(float DeltaSeconds) override;
};
