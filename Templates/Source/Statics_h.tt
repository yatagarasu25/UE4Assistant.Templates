<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#@ parameter name="modulename" type="System.String" #>
#pragma once

#include "Kismet/BlueprintFunctionLibrary.h"
#include "<#= this.modulename #>BlueprintFunctionLibrary.generated.h"



UCLASS()
class <#= this.modulename.ToUpper() #>_API U<#= this.modulename #>BlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{
	GENERATED_BODY()


public:
	UFUNCTION(Category = "<#= this.modulename #>", BlueprintPure, meta = (HidePin = "WorldContextObject", WorldContext = "WorldContextObject"))
	static class U<#= this.modulename #>GameInstance* GetGameInstance(const UObject* WorldContextObject);

	UFUNCTION(Category = "<#= this.modulename #>", BlueprintPure, meta = (HidePin = "WorldContextObject", WorldContext = "WorldContextObject"))
	static class A<#= this.modulename #>GameMode* GetGameMode(const UObject* WorldContextObject);

	UFUNCTION(Category = "<#= this.modulename #>", BlueprintPure, meta = (WorldContext = "WorldContextObject"))
	static class A<#= this.modulename #>GameState* GetGameState(UObject* WorldContextObject);

	UFUNCTION(Category = "<#= this.modulename #>", BlueprintPure)
	static class A<#= this.modulename #>PlayerState* GetPlayerState(AActor* PlayerPawnOrController);
};
